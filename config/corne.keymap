/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layers

#define WinDef  0
#define WinNav  1
#define MacDef  2
#define MacNav  3
#define Code    4
#define Func    5
#define SYS     6

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        hm: hold_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <125>;
        };

        lm: layer_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        td_win: td_win {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LALT>, <&kp LWIN>;
        };

        td_mac: td_mac {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCMD>, <&kp LALT>;
        };
    };

    macros {
        ter_win: terminal_windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LWIN>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LWIN>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&kp W &kp T &kp RET>;
        };

        ter_mac: terminal_macos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCMD>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&kp G &kp H &kp O &kp S &kp T &kp T &kp Y &kp RET>;
        };

        shot_win: screenshot_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(LSHFT)>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LG(LSHFT)>;
        };

        shot_mac: screenshot_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(LC(LSHFT))>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LG(LC(LSHFT))>;
        };

        max_win: windowmax_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LWIN>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LWIN>;
        };

        min_win: windowmin_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LWIN>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LWIN>;
        };

        max_mac: windowmax_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD &kp LCTRL>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp LCMD &kp LCTRL>;
        };

        min_mac: windowmin_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp GLOBE &kp LCTRL>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp GLOBE &kp LCTRL>;
        };

        spot: spotlight_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCMD>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCMD>;
        };

        rec_mac: screenrecord_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(LSHFT)>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LG(LSHFT)>;
        };

        col: tmux_column {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A) &kp PIPE>;
        };

        row: tmux_row {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A) &kp MINUS>;
        };

        list: tmux_list {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A) &kp W>;
        };

        tabs: tmux_create {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A) &kp C>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        WinDef_layer {
            label = "WinDef";
            display-name = "Windows";
            bindings = <
  &kp Q  &kp W  &kp E    &kp R         &kp T              &kp Y          &kp U            &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D    &kp F         &kp G              &kp H          &kp J            &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C    &kp V         &kp B              &kp N          &kp M            &kp COMMA  &kp DOT  &kp FSLH
                &td_win  &lm Code ESC  &hm LSHFT SPACE    &hm LCTRL RET  &lm WinNav BSPC  &kp TAB
            >;
        };

        WinNav_layer {
            label = "WinNav";
            display-name = "WinNav";
            bindings = <
  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5       &kp N6        &kp N7        &kp N8      &kp N9      &kp N0
  &shot_win  &kp CAPS  &max_win  &kp HOME  &kp PG_UP    &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT   &kp LC(TAB)
  &ter_win   &none     &min_win  &kp END   &kp PG_DN    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp LA(F9)
                       &trans    &trans    &trans       &trans        &trans        &trans
            >;
        };

        MacDef_layer {
            label = "MacDef";
            display-name = "MacOS";
            bindings = <
  &kp Q  &kp W  &kp E    &kp R         &kp T              &kp Y          &kp U            &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D    &kp F         &kp G              &kp H          &kp J            &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C    &kp V         &kp B              &kp N          &kp M            &kp COMMA  &kp DOT  &kp FSLH
                &td_mac  &lm Code ESC  &hm LSHFT SPACE    &hm LCTRL RET  &lm MacNav BSPC  &kp TAB
            >;
        };

        MacNav_layer {
            label = "MacNav";
            display-name = "MacNav";
            bindings = <
  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5       &kp N6        &kp N7        &kp N8      &kp N9      &kp N0
  &shot_mac  &kp CAPS  &max_mac  &kp HOME  &kp PG_UP    &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT   &kp LC(TAB)
  &ter_mac   &spot     &min_mac  &kp END   &kp PG_DN    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &rec_mac
                       &trans    &trans    &trans       &trans        &trans        &trans
            >;
        };

        Code_layer {
            label = "Code";
            display-name = "Code";
            bindings = <
  &kp EXCL  &kp AT  &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR
  &list     &col    &kp GRAVE  &kp MINUS  &kp EQUAL    &kp LBRC   &kp RBRC  &kp SQT   &kp DQT   &kp LC(TAB)
  &tabs     &row    &kp TILDE  &kp PLUS   &kp UNDER    &kp LBKT   &kp RBKT  &kp PIPE  &kp BSLH  &kp DEL
                    &trans     &trans     &trans       &trans     &trans    &trans
            >;
        };

        Func_layer {
            label = "Func";
            display-name = "Func";
            bindings = <
  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6   &kp F7      &kp F8      &kp F9   &kp F10
  &none   &none   &none   &none   &none     &to SYS  &to WinDef  &to MacDef  &kp F11  &kp F12
  &none   &none   &none   &none   &none     &none    &none       &none       &none    &none
                  &trans  &trans  &trans    &trans   &trans      &trans
            >;
        };

        SYS_layer {
            label = "SYS";
            display-name = "System";
            bindings = <
  &none  &none  &none  &none  &bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
  &none  &none  &none  &none  &bootloader    &bootloader   &to WinDef    &to MacDef    &none         &none
  &none  &none  &none  &none  &sys_reset     &sys_reset    &none         &none         &none         &none
                &none  &none  &none          &none         &none         &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        win_function {
            if-layers = <1 4>;
            then-layer = <5>;
        };

        mac_function {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };
};
