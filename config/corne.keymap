/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

// Layers

#define WinDef  0
#define WinNav  1
#define MacDef  2
#define MacNav  3
#define Code    4
#define WinFunc 5
#define MacFunc 6
#define Mouse   7
#define SYS     8

// Mouse Move Speed

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
/*    chosen { zmk,physical-layout = &foostan_corne_5col_layout; }; */

    macros {
        edge: start_edge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
          
                // 開啟執行視窗
                <&macro_press>, <&kp LWIN>,
                <&macro_tap>, <&kp R>,
                <&macro_release>, <&kp LWIN>,
                <&macro_pause_for_release>,

                // 輸入msedge 後按下Enter執行啟動瀏覽器
                <&macro_tap>,
                <&kp M>, <&kp S>, <&kp E>, <&kp D>, <&kp G>, <&kp E>, <&kp RET>;
        };

        ter_win: terminal_windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =

                // 開啟執行視窗
                <&macro_press>, <&kp LWIN>,
                <&macro_tap>, <&kp R>,
                <&macro_release>, <&kp LWIN>,
                <&macro_pause_for_release>,

                // 輸入WT 後按下ENTER執行
                <&macro_tap>,
                <&kp W>, <&kp T>, <&kp RET>;
        };

        ter_mac: terminal_macos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
        
                // 開啟 Spotlight
                <&macro_press>, <&kp LCMD>,
                <&macro_tap>, <&kp SPACE>,
                <&macro_release>, <&kp LCMD>,
                <&macro_pause_for_release>,

                // 等待 Spotlight 完全開啟
                <&macro_wait_time 300>,

                // 輸入 ghostty.app
                <&macro_tap>,
                <&kp G>, <&kp H>, <&kp O>, <&kp S>, <&kp T>, <&kp T>, <&kp Y>,
                <&kp DOT>, <&kp A>, <&kp P>, <&kp P>,

                // 等待 Spotlight 搜尋結果穩定
                <&macro_wait_time 400>,

                // 按下 Enter 啟動
                <&macro_tap>, <&kp RET>;
        };

        max_mac: windowmax_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =

                // 按住 CMD+Control 
                <&macro_press>, <&kp LG(LCTRL)>,

                // 按下 F 視窗放大 
                <&macro_tap>, <&kp F>,

                // 釋放 CMD+Control
                <&macro_release>, <&kp LG(LCTRL)>;
        };
 
        rec_mac: screenrecord_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =

                // 按住 CMD+Shift
                <&macro_press>, <&kp LG(LSHFT)>,

                // 按下 數字5 啟動錄影
                <&macro_tap>, <&kp N5>,

                // 釋放 CMD+Shift
                <&macro_release>, <&kp LG(LSHFT)>;
        };
 
        winup_mac: windowup_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =

                // 按住 Globe+Control
                <&macro_press>, <&kp GLOBE>, <&kp LCTRL>,

                // 按下  放大視窗
                <&macro_tap>, <&kp F>,

                // 釋放 Globe+Control
                <&macro_release>, <&kp GLOBE>, <&kp LCTRL>;
        };

        windown_mac: windowdown_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =

                // 按住 Globe+Control
                <&macro_press>, <&kp GLOBE>, <&kp LCTRL>,

                // 按下 C 取消放大視窗
                <&macro_tap>, <&kp C>,

                // 釋放 Globe+Control
                <&macro_release>, <&kp GLOBE>, <&kp LCTRL>;
        };

        spotlight: spotlight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =

                // 開啟 Spotlight
                <&macro_press>, <&kp LCMD>,
                <&macro_tap>, <&kp SPACE>,
                <&macro_release>, <&kp LCMD>;
        };
 
        move_up: move_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =

                // 移動整行向上
                <&macro_press>, <&kp LALT>,
                <&macro_tap>, <&kp K>,
                <&macro_release>, <&kp LALT>;
        }; 
 
        move_down: move_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =

                // 移動整行向下
                <&macro_press>, <&kp LALT>,
                <&macro_tap>, <&kp J>,
                <&macro_release>, <&kp LALT>;
        }; 
 
        col: tmux_column {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A)>, <&kp PIPE>;
        };
 
        row: tmux_row {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A)>, <&kp MINUS>;
        };
 
        list: tmux_list {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A)>, <&kp W>;
        };
 
        tabs: tmux_create {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(A)>, <&kp C>;
        };
    };
 
    combos {
        compatible = "zmk,combos";

        Combo_Control {
            bindings = <&kp LCTRL>;
            key-positions = <20 21>;
            layers = <0 2>;
        };

        Combo_ESC {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        WinDef_layer {
            label = "WinDef";
            display-name = "Windows";
            bindings = <
            &kp Q  &kp W  &kp E         &kp R     &kp T              &kp Y          &kp U            &kp I      &kp O    &kp P
            &kp A  &kp S  &kp D         &kp F     &kp G              &kp H          &kp J            &kp K      &kp L    &kp SEMI
            &kp Z  &kp X  &kp C         &kp V     &kp B              &kp N          &kp M            &kp COMMA  &kp DOT  &kp FSLH
                          &mt LALT ESC  &mo Code  &mt LSHFT SPACE    &mt LCTRL RET  &lt WinNav BSPC  &kp TAB
            >;
        };
    
        WinNav_layer {
            label = "WinNav";
            display-name = "WinNav";
            bindings = <
            &kp N1         &kp N2     &kp N3        &kp N4    &kp N5       &kp N6        &kp N7        &kp N8      &kp N9      &kp N0
            &kp LG(LS(S))  &kp CAPS   &kp LG(UP)    &kp HOME  &kp PG_UP    &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT   &kp LC(TAB)
            &ter_win       &kp LG(D)  &kp LG(DOWN)  &kp END   &kp PG_DN    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP
                                      &trans        &trans    &trans       &trans        &trans        &trans
            >;
        };
    
        MacDef_layer {
            label = "MacDef";
            display-name = "MacOS";
            bindings = <
            &kp Q  &kp W  &kp E         &kp R     &kp T              &kp Y          &kp U            &kp I      &kp O    &kp P
            &kp A  &kp S  &kp D         &kp F     &kp G              &kp H          &kp J            &kp K      &kp L    &kp SEMI
            &kp Z  &kp X  &kp C         &kp V     &kp B              &kp N          &kp M            &kp COMMA  &kp DOT  &kp FSLH
                          &mt LCMD ESC  &mo Code  &mt LSHFT SPACE    &mt LCTRL RET  &lt MacNav BSPC  &kp TAB
            >;
        };
    
        MacNav_layer {
            label = "MacNav";
            display-name = "MacNav";
            bindings = <
            &kp N1              &kp N2              &kp N3     &kp N4    &kp N5       &kp N6        &kp N7        &kp N8      &kp N9      &kp N0
            &kp LG(LC(LS(N4)))  &kp CAPS            &max_mac   &kp HOME  &kp PG_UP    &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT   &kp LC(TAB)
            &ter_mac            &kp LG(LC(LS(N5)))  &kp LG(M)  &kp END   &kp PG_DN    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP
                                                    &trans     &trans    &trans       &trans        &trans        &trans
            >;
        };
    
        Code_layer {
            label = "Code";
            display-name = "Code";
            bindings = <
            &kp EXCL  &kp AT  &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR
            &list     &col    &kp GRAVE  &kp MINUS  &kp EQUAL    &kp LBRC   &kp RBRC  &kp SQT   &kp DQT   &kp LA(F4)
            &tabs     &row    &kp TILDE  &kp PLUS   &kp UNDER    &kp LBKT   &kp RBKT  &kp PIPE  &kp BSLH  &kp DEL
                              &trans     &trans     &trans       &trans     &trans    &trans
            >;
        };
    
        WinFunc_layer {
            label = "WinFunc";
            display-name = "WinFunc";
            bindings = <
            &kp F1      &kp F2  &kp F3  &kp F4  &kp F5       &kp F6   &kp F7         &kp F8          &kp F9            &kp F10
            &sk LWIN    &none   &none   &none   &none        &none    &none          &none           &kp F11           &kp F12
            &kp(LG(I))  &edge   &none   &none   &to Mouse    &to SYS  &kp LG(LC(D))  &kp LG(LC(F4))  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))
                                &trans  &trans  &trans       &trans   &trans         &trans
            >;
        };
    
        MacFunc_layer {
            label = "MacFunc";
            display-name = "MacFunc";
            bindings = <
            &kp F1      &kp F2  &kp F3        &kp F4     &kp F5       &kp F6      &kp F7      &kp F8    &kp F9        &kp F10
            &sk LALT    &none   &winup_mac    &kp GLOBE  &none        &spotlight  &none       &none     &kp F11       &kp F12
            &kp(LG(I))  &none   &windown_mac  &none      &to Mouse    &to SYS     &move_down  &move_up  &kp LC(LEFT)  &kp LC(RIGHT)
                                &trans        &trans     &trans       &trans      &trans      &trans
            >;
        };
    
        Mouse_layer {
            label = "Mouse";
            display-name = "Mouse";
            bindings = <
            &kp ESC  &none  &none       &none    &none         &none           &none           &none           &none            &none
            &none    &none  &none       &none    &none         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT  &none
            &none    &none  &none       &none    &none         &none           &msc SCRL_UP    &msc SCRL_DOWN  &none            &none
                            &to MacDef  &to SYS  &to WinDef    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;
        };
    
        SYS_layer {
            label = "SYS";
            display-name = "System";
            bindings = <
            &none  &none  &none  &none  &bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
            &none  &none  &none  &none  &bootloader    &bootloader   &none         &none         &none         &none
            &none  &none  &none  &none  &sys_reset     &sys_reset    &none         &none         &none         &none
                          &none  &none  &none          &to MacDef    &to Mouse     &to WinDef
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    
        win_function {
            if-layers = <1 4>;
            then-layer = <5>;
        };
    
        mac_function {
            if-layers = <3 4>;
            then-layer = <6>;
        };
    };
};
